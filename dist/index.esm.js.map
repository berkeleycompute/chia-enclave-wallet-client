{"version":3,"file":"index.esm.js","sources":["../node_modules/bech32/dist/index.js","../src/client/ChiaCloudWalletClient.ts","../src/hooks/useChiaWallet.ts","../src/hooks/useChiaTransactions.ts","../src/components/ChiaWalletModal.tsx","../src/components/ChiaWalletButton.tsx"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","// Chia Cloud Wallet API Client for React\r\n\r\n// Add bech32m import for address conversion\r\nimport { bech32m } from 'bech32';\r\n\r\n// Add error result type for better error handling\r\nexport interface ErrorResult {\r\n  success: false;\r\n  error: string;\r\n  details?: unknown;\r\n}\r\n\r\nexport interface SuccessResult<T> {\r\n  success: true;\r\n  data: T;\r\n}\r\n\r\nexport type Result<T> = SuccessResult<T> | ErrorResult;\r\n\r\nexport interface ChiaCloudWalletConfig {\r\n  baseUrl?: string;\r\n  jwtToken?: string;\r\n  enableLogging?: boolean;\r\n}\r\n\r\nexport interface Coin {\r\n  parentCoinInfo: string;\r\n  puzzleHash: string;\r\n  amount: string;\r\n}\r\n\r\n// Raw coin interface that matches API responses (snake_case)\r\ninterface RawCoin {\r\n  parent_coin_info: string;\r\n  puzzle_hash: string;\r\n  amount: string;\r\n}\r\n\r\n// Type that can be either format\r\ntype CoinInput = Coin | RawCoin | any;\r\n\r\n/**\r\n * Utility function to normalize coin objects from snake_case to camelCase format\r\n * Handles both API response format (snake_case) and client format (camelCase)\r\n */\r\nexport function normalizeCoin(coin: CoinInput): Coin {\r\n  return {\r\n    parentCoinInfo: coin.parentCoinInfo || coin.parent_coin_info,\r\n    puzzleHash: coin.puzzleHash || coin.puzzle_hash,\r\n    amount: coin.amount\r\n  };\r\n}\r\n\r\n/**\r\n * Utility function to normalize an array of coins\r\n */\r\nexport function normalizeCoins(coins: CoinInput[]): Coin[] {\r\n  return coins.map(normalizeCoin);\r\n}\r\n\r\nexport interface CoinSpend {\r\n  coin: Coin;\r\n  puzzle_reveal: string;\r\n  solution: string;\r\n}\r\n\r\nexport interface Payment {\r\n  address: string;\r\n  amount: string | number;\r\n}\r\n\r\n// Updated interfaces to match API specification\r\nexport interface SignSpendBundleRequest {\r\n  spend_bundle_hex?: string;\r\n  coin_spends?: CoinSpend[];\r\n}\r\n\r\nexport interface SendXCHRequest {\r\n  payments: Payment[];\r\n  selected_coins: Coin[];\r\n  fee: string | number;\r\n}\r\n\r\nexport interface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\nexport interface HealthCheckResponse {\r\n  status: string;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface PublicKeyResponse {\r\n  success: boolean;\r\n  address: string;\r\n  email: string;\r\n  master_public_key: string;\r\n  puzzle_hash: string;\r\n  synthetic_public_key: string;\r\n  user_id: string;\r\n}\r\n\r\nexport interface MnemonicResponse {\r\n  success: boolean;\r\n  mnemonic: string;\r\n  warning: string;\r\n}\r\n\r\nexport interface SignedSpendBundleResponse {\r\n  success: boolean;\r\n  signed_spend_bundle: {\r\n    coin_spends: CoinSpend[];\r\n    aggregated_signature: string;\r\n  };\r\n}\r\n\r\nexport interface SendXCHResponse {\r\n  success: boolean;\r\n  signed_spend_bundle: {\r\n    coin_spends: CoinSpend[];\r\n    aggregated_signature: string;\r\n  };\r\n}\r\n\r\n// Legacy interfaces for backward compatibility\r\nexport interface TransactionPayload {\r\n  coin_spends?: CoinSpend[];\r\n  selected_coins?: Coin[];\r\n  payments?: Payment[];\r\n  fee?: string;\r\n}\r\n\r\nexport interface BroadcastSpendBundleRequest {\r\n  coinSpends: CoinSpend[];\r\n  signature: string;\r\n}\r\n\r\nexport interface GetPublicKeyRequest {\r\n  transaction_payload: Record<string, unknown>;\r\n}\r\n\r\nexport interface UnspentCoinsResponse {\r\n  success: boolean;\r\n  data: {\r\n    coins: Coin[];\r\n  };\r\n}\r\n\r\n// New interfaces for hydrated coins\r\nexport interface DriverInfo {\r\n  assetId?: string;\r\n  type?: 'CAT' | 'NFT';\r\n  coin?: Coin;\r\n  info?: {\r\n    currentOwner?: string | null;\r\n    launcherId?: string;\r\n    metadata?: {\r\n      dataHash?: string;\r\n      dataUris?: string[];\r\n      editionNumber?: string;\r\n      editionTotal?: string;\r\n      licenseHash?: string;\r\n      licenseUris?: string[];\r\n      metadataHash?: string;\r\n      metadataUris?: string[];\r\n    };\r\n    metadataUpdaterPuzzleHash?: string;\r\n    p2PuzzleHash?: string;\r\n    royaltyPuzzleHash?: string;\r\n    royaltyTenThousandths?: number | null;\r\n  };\r\n  proof?: {\r\n    lineageProof?: any | null;\r\n  };\r\n}\r\n\r\nexport interface ParentSpendInfo {\r\n  coin: Coin;\r\n  driverInfo: DriverInfo | null;\r\n  parentCoinId: string;\r\n  spentBlockIndex: number;\r\n}\r\n\r\nexport interface HydratedCoin {\r\n  coin: Coin;\r\n  createdHeight: string;\r\n  parentSpendInfo: ParentSpendInfo;\r\n}\r\n\r\nexport interface UnspentHydratedCoinsResponse {\r\n  success: boolean;\r\n  data: HydratedCoin[];\r\n}\r\n\r\nexport interface BroadcastResponse {\r\n  transaction_id: string;\r\n  status: string;\r\n}\r\n\r\n// NFT Offer interfaces\r\nexport interface CatPayment {\r\n  asset_id: string;\r\n  puzzle_hash: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface XchPayment {\r\n  puzzle_hash: string;\r\n  amount: number;\r\n}\r\n\r\n// New simplified interfaces for external use\r\nexport interface SimpleCatPayment {\r\n  asset_id: string;\r\n  deposit_address: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface SimpleXchPayment {\r\n  deposit_address: string;\r\n  amount: number;\r\n}\r\n\r\n// New simplified interfaces for external use\r\nexport interface SimpleRequestedPayments {\r\n  cats?: SimpleCatPayment[];\r\n  xch?: SimpleXchPayment[];\r\n}\r\n\r\nexport interface RequestedPayments {\r\n  cats?: CatPayment[];\r\n  xch?: XchPayment[];\r\n}\r\n\r\nexport interface MakeUnsignedNFTOfferRequest {\r\n  synthetic_public_key: string;\r\n  requested_payments: RequestedPayments;\r\n  nft_data: HydratedCoin;\r\n}\r\n\r\n// New simplified request interface\r\nexport interface SimpleMakeUnsignedNFTOfferRequest {\r\n  requested_payments: SimpleRequestedPayments;\r\n  nft_data: HydratedCoin;\r\n}\r\n\r\nexport interface MakeUnsignedNFTOfferResponse {\r\n  success: boolean;\r\n  data: {\r\n    unsigned_offer_string: string;\r\n  };\r\n}\r\n\r\n// Add new interfaces for signing offers\r\nexport interface SignOfferRequest {\r\n  offer: string;\r\n}\r\n\r\nexport interface SignOfferResponse {\r\n  success: boolean;\r\n  email: string;\r\n  signed_offer: string;\r\n  user_id: string;\r\n}\r\n\r\n// Interface for storing signed offers in localStorage\r\nexport interface StoredOffer {\r\n  id: string;\r\n  unsigned_offer: string;\r\n  signed_offer: string;\r\n  email: string;\r\n  user_id: string;\r\n  created_at: string;\r\n  status: 'pending' | 'accepted' | 'cancelled';\r\n}\r\n\r\nexport class ChiaCloudWalletApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public statusCode?: number,\r\n    public response?: unknown\r\n  ) {\r\n    super(message);\r\n    this.name = 'ChiaCloudWalletApiError';\r\n  }\r\n}\r\n\r\nexport class ChiaCloudWalletClient {\r\n  private baseUrl: string;\r\n  private jwtToken?: string;\r\n  private enableLogging: boolean;\r\n\r\n  constructor(config: ChiaCloudWalletConfig = {}) {\r\n    this.baseUrl = config.baseUrl || 'https://chia-enclave.silicon-dev.net';\r\n    this.jwtToken = config.jwtToken;\r\n    this.enableLogging = config.enableLogging ?? true;\r\n  }\r\n\r\n  /**\r\n   * Log errors if logging is enabled\r\n   */\r\n  private logError(message: string, error?: unknown): void {\r\n    if (this.enableLogging) {\r\n      console.error(`[ChiaCloudWalletClient] ${message}`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log info messages if logging is enabled\r\n   */\r\n  private logInfo(message: string, data?: unknown): void {\r\n    if (this.enableLogging) {\r\n      console.info(`[ChiaCloudWalletClient] ${message}`, data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the JWT token for authentication\r\n   */\r\n  setJwtToken(token: string): void {\r\n    this.jwtToken = token;\r\n  }\r\n\r\n  /**\r\n   * Get the current JWT token\r\n   */\r\n  getJwtToken(): string | undefined {\r\n    return this.jwtToken;\r\n  }\r\n\r\n  /**\r\n   * Make an authenticated API request with enhanced error handling\r\n   */\r\n  private async makeRequest<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {},\r\n    requireAuth: boolean = true\r\n  ): Promise<T> {\r\n    const url = `${this.baseUrl}${endpoint}`;\r\n\r\n    try {\r\n      const headers: any = {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      };\r\n\r\n      if (requireAuth) {\r\n        if (!this.jwtToken) {\r\n          throw new ChiaCloudWalletApiError('JWT token is required for this request');\r\n        }\r\n        headers['Authorization'] = `Bearer ${this.jwtToken}`;\r\n      }\r\n\r\n      this.logInfo(`Making request to ${endpoint}`, { method: options.method || 'GET' });\r\n\r\n      const response = await fetch(url, {\r\n        ...options,\r\n        headers,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        const error = new ChiaCloudWalletApiError(\r\n          `HTTP ${response.status}: ${response.statusText}`,\r\n          response.status,\r\n          errorText\r\n        );\r\n        this.logError(`Request failed for ${endpoint}`, error);\r\n        throw error;\r\n      }\r\n\r\n      const contentType = response.headers.get('content-type');\r\n      if (contentType && contentType.includes('application/json')) {\r\n        const result = await response.json();\r\n        this.logInfo(`Request successful for ${endpoint}`);\r\n        return result;\r\n      } else {\r\n        const result = await response.text() as T;\r\n        this.logInfo(`Request successful for ${endpoint}`);\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof ChiaCloudWalletApiError) {\r\n        throw error;\r\n      }\r\n      const networkError = new ChiaCloudWalletApiError(\r\n        `Network error: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n        undefined,\r\n        error\r\n      );\r\n      this.logError(`Network error for ${endpoint}`, networkError);\r\n      throw networkError;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Health check endpoint with error handling\r\n   */\r\n  async healthCheck(): Promise<Result<HealthCheckResponse>> {\r\n    try {\r\n      const result = await this.makeRequest<HealthCheckResponse>('/health', {\r\n        method: 'GET',\r\n      }, false);\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Health check failed',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get public key from JWT token with error handling\r\n   */\r\n  async getPublicKey(): Promise<Result<PublicKeyResponse>> {\r\n    try {\r\n      const result = await this.makeRequest<PublicKeyResponse>('/public-key', {\r\n        method: 'POST',\r\n        body: JSON.stringify({}),\r\n      });\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to get public key',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export mnemonic phrase with error handling\r\n   */\r\n  async exportMnemonic(): Promise<Result<MnemonicResponse>> {\r\n    try {\r\n      const result = await this.makeRequest<MnemonicResponse>('/mnemonic', {\r\n        method: 'POST',\r\n        body: JSON.stringify({}),\r\n      });\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to export mnemonic',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sign a spend bundle with error handling\r\n   */\r\n  async signSpendBundle(request: SignSpendBundleRequest): Promise<Result<SignedSpendBundleResponse>> {\r\n    try {\r\n      if (!request.spend_bundle_hex && (!request.coin_spends || request.coin_spends.length === 0)) {\r\n        throw new ChiaCloudWalletApiError('Either spend_bundle_hex or coin_spends are required for signing');\r\n      }\r\n\r\n      // Normalize coin spends if provided\r\n      let normalizedRequest = request;\r\n      if (request.coin_spends && request.coin_spends.length > 0) {\r\n        normalizedRequest = {\r\n          ...request,\r\n          coin_spends: request.coin_spends.map(coinSpend => ({\r\n            ...coinSpend,\r\n            coin: normalizeCoin(coinSpend.coin)\r\n          }))\r\n        };\r\n      }\r\n\r\n      const result = await this.makeRequest<SignedSpendBundleResponse>('/wallet/transaction/sign', {\r\n        method: 'POST',\r\n        body: JSON.stringify(normalizedRequest),\r\n      });\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to sign spend bundle',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create and sign a send XCH transaction with error handling\r\n   */\r\n  async sendXCH(request: SendXCHRequest): Promise<Result<SendXCHResponse>> {\r\n    try {\r\n      if (!request.selected_coins || request.selected_coins.length === 0) {\r\n        throw new ChiaCloudWalletApiError('Selected coins are required for sending XCH');\r\n      }\r\n      if (!request.payments || request.payments.length === 0) {\r\n        throw new ChiaCloudWalletApiError('Payments are required for sending XCH');\r\n      }\r\n\r\n      // Normalize all selected coins to ensure consistent format\r\n      const normalizedRequest = {\r\n        ...request,\r\n        selected_coins: normalizeCoins(request.selected_coins)\r\n      };\r\n\r\n      const result = await this.makeRequest<SendXCHResponse>('/wallet/transaction/send-xch', {\r\n        method: 'POST',\r\n        body: JSON.stringify(normalizedRequest),\r\n      });\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to send XCH',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get unspent hydrated coins for a given public key (includes additional metadata)\r\n   */\r\n  async getUnspentHydratedCoins(publicKey: string): Promise<Result<UnspentHydratedCoinsResponse>> {\r\n    try {\r\n      if (!publicKey || publicKey.trim() === '') {\r\n        throw new ChiaCloudWalletApiError('Public key is required');\r\n      }\r\n\r\n      const result = await this.makeRequest<UnspentHydratedCoinsResponse>(`/wallet/unspent-hydrated-coins/${publicKey}`, {\r\n        method: 'GET',\r\n      }, false);\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to get unspent hydrated coins',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sign an offer with error handling\r\n   */\r\n  async signOffer(request: SignOfferRequest): Promise<Result<SignOfferResponse>> {\r\n    try {\r\n      if (!request.offer || request.offer.trim() === '') {\r\n        throw new ChiaCloudWalletApiError('Offer string is required for signing');\r\n      }\r\n\r\n      // Validate offer format (should start with \"offer1\")\r\n      if (!request.offer.startsWith('offer1')) {\r\n        throw new ChiaCloudWalletApiError('Invalid offer format: offer must start with \"offer1\"');\r\n      }\r\n\r\n      this.logInfo('Signing offer', {\r\n        offerLength: request.offer.length,\r\n        offerPrefix: request.offer.substring(0, 20) + '...'\r\n      });\r\n\r\n      const result = await this.makeRequest<SignOfferResponse>('/wallet/transaction/sign-offer', {\r\n        method: 'POST',\r\n        body: JSON.stringify(request),\r\n      });\r\n\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to sign offer',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an unsigned NFT offer with error handling\r\n   */\r\n  async makeUnsignedNFTOffer(request: MakeUnsignedNFTOfferRequest): Promise<Result<MakeUnsignedNFTOfferResponse>> {\r\n    try {\r\n      // Validate required fields\r\n      if (!request.synthetic_public_key || request.synthetic_public_key.trim() === '') {\r\n        throw new ChiaCloudWalletApiError('Synthetic public key is required');\r\n      }\r\n\r\n      if (!request.requested_payments ||\r\n        (!request.requested_payments.cats?.length) &&\r\n        (!request.requested_payments.xch?.length)) {\r\n        throw new ChiaCloudWalletApiError('Requested payments with CAT tokens or XCH are required');\r\n      }\r\n\r\n      if (!request.nft_data) {\r\n        throw new ChiaCloudWalletApiError('NFT data is required');\r\n      }\r\n\r\n      // Ensure NFT data coin format is normalized\r\n      const normalizedNFTData = {\r\n        ...request.nft_data,\r\n        coin: normalizeCoin(request.nft_data.coin)\r\n      };\r\n\r\n      // Prepare the request with normalized data\r\n      const normalizedRequest = {\r\n        ...request,\r\n        nft_data: normalizedNFTData\r\n      };\r\n\r\n      this.logInfo('Making unsigned NFT offer request', {\r\n        publicKey: request.synthetic_public_key.substring(0, 10) + '...',\r\n        catPaymentsCount: request.requested_payments.cats?.length || 0,\r\n        xchPaymentsCount: request.requested_payments.xch?.length || 0\r\n      });\r\n\r\n      const result = await this.makeRequest<MakeUnsignedNFTOfferResponse>('/wallet/offer/make-unsigned-nft', {\r\n        method: 'POST',\r\n        body: JSON.stringify(normalizedRequest),\r\n      });\r\n\r\n      // Return the unsigned offer - signing should be done separately\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to make unsigned NFT offer',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Broadcast a signed spend bundle with error handling\r\n   */\r\n  async broadcastSpendBundle(request: BroadcastSpendBundleRequest): Promise<Result<BroadcastResponse>> {\r\n    try {\r\n      if (!request.coinSpends || request.coinSpends.length === 0) {\r\n        throw new ChiaCloudWalletApiError('Coin spends are required for broadcasting');\r\n      }\r\n      if (!request.signature) {\r\n        throw new ChiaCloudWalletApiError('Signature is required for broadcasting');\r\n      }\r\n\r\n      // Normalize all coins in the coin spends\r\n      const normalizedCoinSpends = request.coinSpends.map(coinSpend => ({\r\n        ...coinSpend,\r\n        coin: normalizeCoin(coinSpend.coin)\r\n      }));\r\n\r\n      const result = await this.makeRequest<BroadcastResponse>('/wallet/transaction/broadcast', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          coinSpends: normalizedCoinSpends,\r\n          signature: request.signature\r\n        }),\r\n      });\r\n      return { success: true, data: result };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to broadcast spend bundle',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convenience method to broadcast a signed spend bundle from a SignedSpendBundleResponse or SendXCHResponse\r\n   */\r\n  async broadcastSignedSpendBundle(signedBundle: SignedSpendBundleResponse | SendXCHResponse): Promise<Result<BroadcastResponse>> {\r\n    try {\r\n      if (!signedBundle.success) {\r\n        throw new ChiaCloudWalletApiError('Cannot broadcast failed transaction');\r\n      }\r\n\r\n      const { coin_spends, aggregated_signature } = signedBundle.signed_spend_bundle;\r\n\r\n      return await this.broadcastSpendBundle({\r\n        coinSpends: coin_spends,\r\n        signature: aggregated_signature\r\n      });\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to broadcast signed spend bundle',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Complete transaction flow: create, sign, and broadcast XCH transaction\r\n   */\r\n  async sendAndBroadcastXCH(request: SendXCHRequest): Promise<Result<BroadcastResponse>> {\r\n    try {\r\n      // First, create and sign the transaction\r\n      const signedResult = await this.sendXCH(request);\r\n      if (!signedResult.success) {\r\n        return {\r\n          success: false,\r\n          error: `Failed to sign transaction: ${signedResult.error}`,\r\n          details: signedResult.details\r\n        };\r\n      }\r\n\r\n      // Then broadcast the signed transaction\r\n      const broadcastResult = await this.broadcastSignedSpendBundle(signedResult.data);\r\n      if (!broadcastResult.success) {\r\n        return {\r\n          success: false,\r\n          error: `Failed to broadcast transaction: ${broadcastResult.error}`,\r\n          details: broadcastResult.details\r\n        };\r\n      }\r\n\r\n      return broadcastResult;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to send and broadcast XCH',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method to convert a Chia address to puzzle hash using bech32m decoding\r\n   */\r\n  public static convertAddressToPuzzleHash(address: string): Result<string> {\r\n    try {\r\n      // Basic validation\r\n      if (!address || typeof address !== 'string') {\r\n        return {\r\n          success: false,\r\n          error: 'Address must be a non-empty string'\r\n        };\r\n      }\r\n\r\n      // Decode bech32m address\r\n      const decoded = bech32m.decode(address);\r\n\r\n      // Validate prefix\r\n      if (decoded.prefix !== 'xch') {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid address prefix: must be \"xch\"'\r\n        };\r\n      }\r\n\r\n      // Validate word length (52 5-bit words for a 32-byte puzzle hash)\r\n      if (decoded.words.length !== 52) {\r\n        return {\r\n          success: false,\r\n          error: `Invalid address data length: expected 52 words, got ${decoded.words.length}`\r\n        };\r\n      }\r\n\r\n      // Convert 5-bit words to 8-bit bytes\r\n      const bytes = bech32m.fromWords(decoded.words);\r\n\r\n      // Convert bytes to hex string\r\n      const puzzleHash = Array.from(bytes)\r\n        .map(b => {\r\n          const hex = b.toString(16);\r\n          return hex.length === 1 ? '0' + hex : hex;\r\n        })\r\n        .join('');\r\n\r\n      return {\r\n        success: true,\r\n        data: puzzleHash\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to convert address to puzzle hash',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility function to extract simple coins from hydrated coins\r\n   * This helps with migration from getUnspentCoins to getUnspentHydratedCoins\r\n   */\r\n  static extractCoinsFromHydratedCoins(hydratedCoins: HydratedCoin[]): Coin[] {\r\n    return hydratedCoins.map(hydratedCoin => hydratedCoin.coin);\r\n  }\r\n\r\n  /**\r\n   * Get wallet balance using hydrated coins (enhanced version)\r\n   */\r\n  async getWalletBalanceEnhanced(publicKey: string): Promise<Result<{\r\n    totalBalance: number;\r\n    coinCount: number;\r\n    xchCoins: HydratedCoin[];\r\n    catCoins: HydratedCoin[];\r\n    nftCoins: HydratedCoin[];\r\n  }>> {\r\n    try {\r\n      const hydratedResult = await this.getUnspentHydratedCoins(publicKey);\r\n      if (!hydratedResult.success) {\r\n        return {\r\n          success: false,\r\n          error: `Failed to get enhanced balance: ${hydratedResult.error}`\r\n        };\r\n      }\r\n\r\n      let totalBalance = 0;\r\n      const xchCoins: HydratedCoin[] = [];\r\n      const catCoins: HydratedCoin[] = [];\r\n      const nftCoins: HydratedCoin[] = [];\r\n\r\n      for (const hydratedCoin of hydratedResult.data.data) {\r\n        try {\r\n          totalBalance += parseInt(hydratedCoin.coin.amount);\r\n\r\n          // Categorize coins by type\r\n          const driverInfo = hydratedCoin.parentSpendInfo.driverInfo;\r\n          if (driverInfo?.type === 'CAT') {\r\n            catCoins.push(hydratedCoin);\r\n          } else if (driverInfo?.type === 'NFT') {\r\n            nftCoins.push(hydratedCoin);\r\n          } else {\r\n            xchCoins.push(hydratedCoin);\r\n          }\r\n        } catch (error) {\r\n          this.logError(`Invalid coin amount in enhanced balance calculation: ${hydratedCoin.coin.amount}`, error);\r\n          // Continue with other coins instead of failing entirely\r\n        }\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          totalBalance,\r\n          coinCount: hydratedResult.data.data.length,\r\n          xchCoins,\r\n          catCoins,\r\n          nftCoins\r\n        }\r\n      };\r\n    } catch (error) {\r\n      this.logError('Error in getWalletBalanceEnhanced', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to get enhanced wallet balance',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method to convert XCH to mojos with error handling\r\n   */\r\n  static xchToMojos(xchAmount: number): Result<string> {\r\n    try {\r\n      if (typeof xchAmount !== 'number' || isNaN(xchAmount) || xchAmount < 0) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid XCH amount'\r\n        };\r\n      }\r\n\r\n      const MOJOS_PER_XCH = 1000000000000; // 1 XCH = 1 trillion mojos\r\n      const mojos = Math.round(xchAmount * MOJOS_PER_XCH);\r\n      return { success: true, data: mojos.toString() };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to convert XCH to mojos',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method to convert mojos to XCH with error handling\r\n   */\r\n  static mojosToXCH(mojos: string | number): Result<number> {\r\n    try {\r\n      const MOJOS_PER_XCH = 1000000000000;\r\n      const mojosAmount = typeof mojos === 'string' ? parseInt(mojos) : mojos;\r\n      const xchAmount = mojosAmount / MOJOS_PER_XCH;\r\n\r\n      if (isNaN(xchAmount)) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid mojos amount'\r\n        };\r\n      }\r\n\r\n      return { success: true, data: xchAmount };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to convert mojos to XCH',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Safe version of the original utility methods for backward compatibility\r\n   */\r\n  static xchToMojosUnsafe(xchAmount: number): string {\r\n    const MOJOS_PER_XCH = 1000000000000;\r\n    const mojos = Math.round(xchAmount * MOJOS_PER_XCH);\r\n    return mojos.toString();\r\n  }\r\n\r\n  static mojosToXCHUnsafe(mojos: string | number): number {\r\n    const MOJOS_PER_XCH = 1000000000000;\r\n    const mojosAmount = typeof mojos === 'string' ? parseInt(mojos) : mojos;\r\n    return mojosAmount / MOJOS_PER_XCH;\r\n  }\r\n\r\n  /**\r\n   * Statically calculate a coin's ID\r\n   * Coin ID = SHA256(parent_coin_info + puzzle_hash + amount)\r\n   * @param coin The coin to calculate the ID for\r\n   * @returns Promise<Result<string>> The coin ID as a hex string\r\n   */\r\n  static async calculateCoinId(coin: CoinInput): Promise<Result<string>> {\r\n    try {\r\n      // Normalize the coin to ensure consistent format\r\n      const normalizedCoin = normalizeCoin(coin);\r\n\r\n      // Extract normalized fields\r\n      const parentCoinInfo = normalizedCoin.parentCoinInfo;\r\n      const puzzleHash = normalizedCoin.puzzleHash;\r\n      const amount = normalizedCoin.amount;\r\n\r\n      // Validate inputs\r\n      if (!parentCoinInfo || !puzzleHash || !amount) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid coin: missing required fields (parent_coin_info/parentCoinInfo, puzzle_hash/puzzleHash, amount) ' + JSON.stringify(coin)\r\n        }\r\n      }\r\n\r\n      // Remove '0x' prefix if present\r\n      const cleanParentCoinInfo = parentCoinInfo.replace(/^0x/, '');\r\n      const cleanPuzzleHash = puzzleHash.replace(/^0x/, '');\r\n\r\n      // Validate hex strings\r\n      if (!/^[0-9a-fA-F]{64}$/.test(cleanParentCoinInfo)) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid parent_coin_info: must be a 64-character hex string'\r\n        };\r\n      }\r\n\r\n      if (!/^[0-9a-fA-F]{64}$/.test(cleanPuzzleHash)) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid puzzle_hash: must be a 64-character hex string'\r\n        };\r\n      }\r\n\r\n      // Convert amount to 8-byte big-endian format\r\n      let amountNumber: number;\r\n      try {\r\n        amountNumber = parseInt(amount);\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid amount: must be a valid number string'\r\n        };\r\n      }\r\n\r\n      if (amountNumber < 0) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid amount: must be non-negative'\r\n        };\r\n      }\r\n\r\n      // Convert amount to 8-byte big-endian hex string\r\n      const amountHex = ('0000000000000000' + amountNumber.toString(16)).slice(-16);\r\n\r\n      // Concatenate all parts\r\n      const concatenated = cleanParentCoinInfo + cleanPuzzleHash + amountHex;\r\n\r\n      // Convert hex string to bytes\r\n      const bytes = new Uint8Array(concatenated.length / 2);\r\n      for (let i = 0; i < concatenated.length; i += 2) {\r\n        bytes[i / 2] = parseInt(concatenated.substr(i, 2), 16);\r\n      }\r\n\r\n      // Calculate SHA256 hash using Web Crypto API\r\n      const hashBuffer = await crypto.subtle.digest('SHA-256', bytes);\r\n      const hashArray = new Uint8Array(hashBuffer);\r\n\r\n      // Convert to hex string\r\n      const coinId = Array.from(hashArray)\r\n        .map(b => {\r\n          const hex = b.toString(16);\r\n          return hex.length === 1 ? '0' + hex : hex;\r\n        })\r\n        .join('');\r\n\r\n      return {\r\n        success: true,\r\n        data: coinId\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to calculate coin ID',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate coin IDs for multiple coins\r\n   * @param coins Array of coins to calculate IDs for\r\n   * @returns Promise<Result<{coin: Coin, coinId: string}[]>> Array of coins with their IDs\r\n   */\r\n  static async calculateCoinIds(coins: (CoinInput | any)[]): Promise<Result<{ coin: Coin, coinId: string }[]>> {\r\n    try {\r\n      // Normalize all coins to ensure consistent format\r\n      const normalizedCoins = normalizeCoins(coins);\r\n      const results: { coin: Coin, coinId: string }[] = [];\r\n\r\n      for (const coin of normalizedCoins) {\r\n        const result = await ChiaCloudWalletClient.calculateCoinId(coin);\r\n        if (!result.success) {\r\n          const parentInfo = coin.parentCoinInfo || 'unknown';\r\n          return {\r\n            success: false,\r\n            error: `Failed to calculate coin ID for coin with parent ${parentInfo}: ${result.error}`\r\n          };\r\n        }\r\n        results.push({ coin, coinId: result.data });\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data: results\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to calculate coin IDs',\r\n        details: error\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility method to validate a coin ID format\r\n   * @param coinId The coin ID to validate\r\n   * @returns boolean Whether the coin ID is valid\r\n   */\r\n  static isValidCoinId(coinId: string): boolean {\r\n    // Remove '0x' prefix if present\r\n    const id = coinId.replace(/^0x/, '');\r\n    // Must be exactly 64 hex characters (32 bytes)\r\n    return /^[0-9a-fA-F]{64}$/.test(id);\r\n  }\r\n}\r\n\r\n// Export a default instance for convenience\r\nexport const chiaCloudWalletClient = new ChiaCloudWalletClient(); ","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { ChiaCloudWalletClient, type PublicKeyResponse, type HydratedCoin, type Coin } from '../client/ChiaCloudWalletClient.ts';\r\n\r\nexport interface UseChiaWalletConfig {\r\n  baseUrl?: string;\r\n  enableLogging?: boolean;\r\n  autoConnect?: boolean;\r\n}\r\n\r\nexport interface WalletState {\r\n  // Connection state\r\n  isConnected: boolean;\r\n  isConnecting: boolean;\r\n  \r\n  // Authentication\r\n  jwtToken: string | null;\r\n  \r\n  // Wallet data\r\n  publicKey: string | null; // The address\r\n  publicKeyData: PublicKeyResponse | null; // Full public key response\r\n  syntheticPublicKey: string | null; // Easy access to synthetic public key\r\n  \r\n  // Balance and coins\r\n  balance: number;\r\n  coinCount: number;\r\n  unspentCoins: Coin[];\r\n  hydratedCoins: HydratedCoin[];\r\n  \r\n  // Loading states\r\n  balanceLoading: boolean;\r\n  \r\n  // Errors\r\n  error: string | null;\r\n  balanceError: string | null;\r\n  \r\n  // Metadata\r\n  lastSuccessfulRefresh: number;\r\n}\r\n\r\nexport interface UseChiaWalletResult extends WalletState {\r\n  // Client instance\r\n  client: ChiaCloudWalletClient;\r\n  \r\n  // Actions\r\n  setJwtToken: (token: string | null) => void;\r\n  connectWallet: () => Promise<void>;\r\n  disconnectWallet: () => void;\r\n  refreshWallet: () => Promise<void>;\r\n  \r\n  // Utility functions\r\n  formatBalance: (balance: number) => string;\r\n  formatAddress: (address: string) => string;\r\n}\r\n\r\nconst STORAGE_KEY = 'chia_wallet_state';\r\nconst BACKGROUND_UPDATE_INTERVAL = 60000; // 1 minute\r\n\r\nexport function useChiaWallet(config: UseChiaWalletConfig = {}): UseChiaWalletResult {\r\n  const clientRef = useRef<ChiaCloudWalletClient | null>(null);\r\n  const backgroundUpdateRef = useRef<number | null>(null);\r\n  \r\n  // Initialize client\r\n  if (!clientRef.current) {\r\n    clientRef.current = new ChiaCloudWalletClient({\r\n      baseUrl: config.baseUrl,\r\n      enableLogging: config.enableLogging,\r\n    });\r\n  }\r\n  \r\n  const client = clientRef.current;\r\n  \r\n  // Wallet state\r\n  const [state, setState] = useState<WalletState>({\r\n    isConnected: false,\r\n    isConnecting: false,\r\n    jwtToken: null,\r\n    publicKey: null,\r\n    publicKeyData: null,\r\n    syntheticPublicKey: null,\r\n    balance: 0,\r\n    coinCount: 0,\r\n    unspentCoins: [],\r\n    hydratedCoins: [],\r\n    balanceLoading: false,\r\n    error: null,\r\n    balanceError: null,\r\n    lastSuccessfulRefresh: 0,\r\n  });\r\n  \r\n  // Load persisted state on mount\r\n  useEffect(() => {\r\n    const loadPersistedState = () => {\r\n      try {\r\n        const stored = localStorage.getItem(STORAGE_KEY);\r\n        if (stored) {\r\n          const parsedState = JSON.parse(stored);\r\n          \r\n          // Validate that the stored state is not too old (24 hours)\r\n          const maxAge = 24 * 60 * 60 * 1000; // 24 hours\r\n          if (Date.now() - parsedState.timestamp < maxAge) {\r\n            setState(prevState => ({\r\n              ...prevState,\r\n              isConnected: parsedState.isConnected || false,\r\n              jwtToken: parsedState.jwtToken || null,\r\n              publicKey: parsedState.publicKey || null,\r\n              publicKeyData: parsedState.publicKeyData || null,\r\n              syntheticPublicKey: parsedState.syntheticPublicKey || null,\r\n              balance: parsedState.balance ? parseInt(parsedState.balance) : 0,\r\n              coinCount: parsedState.coinCount || 0,\r\n              unspentCoins: parsedState.unspentCoins?.map((coin: any) => ({\r\n                ...coin,\r\n                amount: coin.amount.toString()\r\n              })) || [],\r\n              hydratedCoins: parsedState.hydratedCoins?.map((coin: any) => ({\r\n                ...coin,\r\n                coin: {\r\n                  ...coin.coin,\r\n                  amount: coin.coin.amount.toString()\r\n                }\r\n              })) || [],\r\n              lastSuccessfulRefresh: parsedState.lastSuccessfulRefresh || 0,\r\n            }));\r\n            \r\n            // Set JWT token on client if available\r\n            if (parsedState.jwtToken && client) {\r\n              client.setJwtToken(parsedState.jwtToken);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load persisted wallet state:', error);\r\n      }\r\n    };\r\n    \r\n    loadPersistedState();\r\n  }, [client]);\r\n  \r\n  // Save state to localStorage whenever it changes\r\n  const saveState = useCallback((currentState: WalletState) => {\r\n    try {\r\n      const stateToSave = {\r\n        ...currentState,\r\n        balance: currentState.balance.toString(), // Convert BigInt to string\r\n        unspentCoins: currentState.unspentCoins.map(coin => ({\r\n          ...coin,\r\n          amount: coin.amount.toString()\r\n        })),\r\n        hydratedCoins: currentState.hydratedCoins.map(coin => ({\r\n          ...coin,\r\n          coin: {\r\n            ...coin.coin,\r\n            amount: coin.coin.amount.toString()\r\n          }\r\n        })),\r\n        timestamp: Date.now(),\r\n      };\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(stateToSave));\r\n    } catch (error) {\r\n      console.error('Failed to save wallet state:', error);\r\n    }\r\n  }, []);\r\n  \r\n  // Setup background updates when connected\r\n  useEffect(() => {\r\n    if (state.isConnected && state.publicKey && !state.balanceLoading) {\r\n      backgroundUpdateRef.current = window.setInterval(() => {\r\n        refreshWallet();\r\n      }, BACKGROUND_UPDATE_INTERVAL);\r\n    } else {\r\n      if (backgroundUpdateRef.current) {\r\n        clearInterval(backgroundUpdateRef.current);\r\n        backgroundUpdateRef.current = null;\r\n      }\r\n    }\r\n    \r\n    return () => {\r\n      if (backgroundUpdateRef.current) {\r\n        clearInterval(backgroundUpdateRef.current);\r\n        backgroundUpdateRef.current = null;\r\n      }\r\n    };\r\n  }, [state.isConnected, state.publicKey, state.balanceLoading]);\r\n  \r\n  // Set JWT token\r\n  const setJwtToken = useCallback((token: string | null) => {\r\n    setState(prevState => {\r\n      const newState = { ...prevState, jwtToken: token };\r\n      saveState(newState);\r\n      return newState;\r\n    });\r\n    \r\n    if (token && client) {\r\n      client.setJwtToken(token);\r\n      \r\n      // Auto-connect if enabled\r\n      if (config.autoConnect !== false) {\r\n        connectWallet();\r\n      }\r\n    } else {\r\n      disconnectWallet();\r\n    }\r\n  }, [client, config.autoConnect]);\r\n  \r\n  // Connect wallet\r\n  const connectWallet = useCallback(async () => {\r\n    if (!client || !state.jwtToken) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        error: 'JWT token is required for wallet connection'\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    setState(prevState => ({ ...prevState, isConnecting: true, error: null }));\r\n    \r\n    try {\r\n      // Get public key first\r\n      const pkResponse = await client.getPublicKey();\r\n      if (!pkResponse.success) {\r\n        throw new Error(pkResponse.error);\r\n      }\r\n      \r\n      const newState: Partial<WalletState> = {\r\n        isConnected: true,\r\n        isConnecting: false,\r\n        publicKeyData: pkResponse.data,\r\n        publicKey: pkResponse.data.address,\r\n        syntheticPublicKey: pkResponse.data.synthetic_public_key,\r\n        error: null,\r\n      };\r\n      \r\n      setState(prevState => {\r\n        const updatedState = { ...prevState, ...newState };\r\n        saveState(updatedState);\r\n        return updatedState;\r\n      });\r\n      \r\n      // Load wallet balance\r\n      await refreshWallet();\r\n      \r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to connect wallet';\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        isConnecting: false,\r\n        error: errorMessage,\r\n        isConnected: false,\r\n        publicKey: null,\r\n        publicKeyData: null,\r\n        syntheticPublicKey: null,\r\n      }));\r\n    }\r\n  }, [client, state.jwtToken]);\r\n  \r\n  // Disconnect wallet\r\n  const disconnectWallet = useCallback(() => {\r\n    // Clear background updates\r\n    if (backgroundUpdateRef.current) {\r\n      clearInterval(backgroundUpdateRef.current);\r\n      backgroundUpdateRef.current = null;\r\n    }\r\n    \r\n    const newState: WalletState = {\r\n      isConnected: false,\r\n      isConnecting: false,\r\n      jwtToken: null,\r\n      publicKey: null,\r\n      publicKeyData: null,\r\n      syntheticPublicKey: null,\r\n      balance: 0,\r\n      coinCount: 0,\r\n      unspentCoins: [],\r\n      hydratedCoins: [],\r\n      balanceLoading: false,\r\n      error: null,\r\n      balanceError: null,\r\n      lastSuccessfulRefresh: 0,\r\n    };\r\n    \r\n    setState(newState);\r\n    \r\n    // Clear persisted state\r\n    try {\r\n      localStorage.removeItem(STORAGE_KEY);\r\n    } catch (error) {\r\n      console.error('Failed to clear wallet state:', error);\r\n    }\r\n    \r\n    // Reset client\r\n    if (client) {\r\n      client.setJwtToken(undefined as any);\r\n    }\r\n  }, [client]);\r\n  \r\n  // Refresh wallet data\r\n  const refreshWallet = useCallback(async () => {\r\n    if (!client || !state.publicKey) {\r\n      return;\r\n    }\r\n    \r\n    setState(prevState => ({ ...prevState, balanceLoading: true, balanceError: null }));\r\n    \r\n    try {\r\n      const hydratedResult = await client.getUnspentHydratedCoins(state.publicKey);\r\n      if (!hydratedResult.success) {\r\n        throw new Error(hydratedResult.error);\r\n      }\r\n      \r\n      // Extract simple coins from hydrated coins for backward compatibility\r\n      const coins = ChiaCloudWalletClient.extractCoinsFromHydratedCoins(hydratedResult.data.data);\r\n      let totalBalance = 0;\r\n      \r\n      // Calculate balance from coins\r\n      for (const coin of coins) {\r\n        try {\r\n          totalBalance += parseInt(coin.amount);\r\n        } catch (coinError) {\r\n          console.warn('Invalid coin amount:', coin.amount, coinError);\r\n          // Continue with other coins\r\n        }\r\n      }\r\n      \r\n      const newState: Partial<WalletState> = {\r\n        balance: totalBalance,\r\n        coinCount: coins.length,\r\n        hydratedCoins: hydratedResult.data.data,\r\n        unspentCoins: coins,\r\n        lastSuccessfulRefresh: Date.now(),\r\n        balanceLoading: false,\r\n        balanceError: null,\r\n      };\r\n      \r\n      setState(prevState => {\r\n        const updatedState = { ...prevState, ...newState };\r\n        saveState(updatedState);\r\n        return updatedState;\r\n      });\r\n      \r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load wallet balance';\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        balanceLoading: false,\r\n        balanceError: errorMessage,\r\n      }));\r\n    }\r\n  }, [client, state.publicKey]);\r\n  \r\n  // Utility functions\r\n  const formatBalance = useCallback((balance: number): string => {\r\n    const result = ChiaCloudWalletClient.mojosToXCH(balance);\r\n    if (!result.success) return '0';\r\n    \r\n    // Format to remove trailing zeros\r\n    let formatted = result.data.toFixed(13);\r\n    formatted = formatted.replace(/\\.?0+$/, '');\r\n    \r\n    return formatted;\r\n  }, []);\r\n  \r\n  const formatAddress = useCallback((address: string): string => {\r\n    if (!address) return '';\r\n    return `${address.substring(0, 10)}...${address.substring(address.length - 10)}`;\r\n  }, []);\r\n  \r\n  // Auto-connect on mount if JWT token is available\r\n  useEffect(() => {\r\n    if (state.jwtToken && !state.isConnected && !state.isConnecting && config.autoConnect !== false) {\r\n      connectWallet();\r\n    }\r\n  }, [state.jwtToken, state.isConnected, state.isConnecting, config.autoConnect, connectWallet]);\r\n  \r\n  return {\r\n    ...state,\r\n    client,\r\n    setJwtToken,\r\n    connectWallet,\r\n    disconnectWallet,\r\n    refreshWallet,\r\n    formatBalance,\r\n    formatAddress,\r\n  };\r\n} ","import React, { useState, useCallback, useRef } from 'react';\r\nimport { ChiaCloudWalletClient, type Coin, type SendXCHRequest } from '../client/ChiaCloudWalletClient.ts';\r\nimport { bech32m } from 'bech32';\r\n\r\nexport interface TransactionRecord {\r\n  id: string;\r\n  type: 'outgoing' | 'incoming';\r\n  amount: number;\r\n  recipient?: string;\r\n  sender?: string;\r\n  fee: number;\r\n  timestamp: number;\r\n  status: 'pending' | 'confirmed' | 'failed';\r\n  transactionId?: string;\r\n  blockchainStatus?: string;\r\n}\r\n\r\nexport interface UseChiaTransactionsResult {\r\n  // State\r\n  transactions: TransactionRecord[];\r\n  isSending: boolean;\r\n  sendError: string | null;\r\n  \r\n  // Actions\r\n  sendXCH: (recipientAddress: string, amountXCH: number, feeXCH?: number) => Promise<boolean>;\r\n  addTransaction: (transaction: TransactionRecord) => void;\r\n  clearTransactions: () => void;\r\n  \r\n  // Validation\r\n  validateChiaAddress: (address: string) => { isValid: boolean; error?: string };\r\n}\r\n\r\nconst TRANSACTIONS_STORAGE_KEY = 'chia_transactions';\r\n\r\nexport function useChiaTransactions(client: ChiaCloudWalletClient, unspentCoins: Coin[]): UseChiaTransactionsResult {\r\n  const [transactions, setTransactions] = useState<TransactionRecord[]>([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [sendError, setSendError] = useState<string | null>(null);\r\n  \r\n  // Load transactions from localStorage on initialization\r\n  const loadTransactions = useCallback(() => {\r\n    try {\r\n      const stored = localStorage.getItem(TRANSACTIONS_STORAGE_KEY);\r\n      if (stored) {\r\n        const parsedTransactions = JSON.parse(stored);\r\n        // Convert amount and fee strings back to numbers\r\n        const convertedTransactions = parsedTransactions.map((tx: any) => ({\r\n          ...tx,\r\n          amount: parseInt(tx.amount),\r\n          fee: parseInt(tx.fee || '0'),\r\n        }));\r\n        \r\n        // Filter out transactions older than 30 days\r\n        const thirtyDaysAgo = Date.now() - (30 * 24 * 60 * 60 * 1000);\r\n        const recentTransactions = convertedTransactions.filter((tx: TransactionRecord) => \r\n          tx.timestamp > thirtyDaysAgo\r\n        );\r\n        \r\n        setTransactions(recentTransactions);\r\n        \r\n        // Save cleaned transactions back if we filtered any\r\n        if (recentTransactions.length !== convertedTransactions.length) {\r\n          saveTransactions(recentTransactions);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load transactions from localStorage:', error);\r\n    }\r\n  }, []);\r\n  \r\n  // Save transactions to localStorage\r\n  const saveTransactions = useCallback((txs: TransactionRecord[]) => {\r\n    try {\r\n      // Convert numbers to string for consistent JSON serialization\r\n      const serializableTransactions = txs.map(tx => ({\r\n        ...tx,\r\n        amount: tx.amount.toString(),\r\n        fee: tx.fee.toString(),\r\n      }));\r\n      localStorage.setItem(TRANSACTIONS_STORAGE_KEY, JSON.stringify(serializableTransactions));\r\n    } catch (error) {\r\n      console.error('Failed to save transactions to localStorage:', error);\r\n    }\r\n  }, []);\r\n  \r\n  // Validate Chia address using bech32m\r\n  const validateChiaAddress = useCallback((address: string): { isValid: boolean; error?: string } => {\r\n    try {\r\n      if (!address || typeof address !== 'string') {\r\n        return { isValid: false, error: 'Address must be a non-empty string' };\r\n      }\r\n      \r\n      const decoded = bech32m.decode(address);\r\n      \r\n      if (decoded.prefix !== 'xch') {\r\n        return { isValid: false, error: 'Invalid address prefix: must be \"xch\"' };\r\n      }\r\n      \r\n      if (decoded.words.length !== 52) {\r\n        return { isValid: false, error: 'Invalid address data length' };\r\n      }\r\n      \r\n      return { isValid: true };\r\n    } catch (err) {\r\n      return {\r\n        isValid: false,\r\n        error: err instanceof Error ? `Invalid address encoding: ${err.message}` : 'Invalid address encoding',\r\n      };\r\n    }\r\n  }, []);\r\n  \r\n  // Select coins for a transaction amount\r\n  const selectCoinsForAmount = useCallback((totalNeededMojos: number): Coin[] | null => {\r\n    if (!unspentCoins || unspentCoins.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Sort coins by amount descending (largest first)\r\n    const sortedCoins = [...unspentCoins].sort((a, b) => {\r\n      const amountA = parseInt(a.amount);\r\n      const amountB = parseInt(b.amount);\r\n      return amountB - amountA;\r\n    });\r\n    \r\n    const selectedCoins: Coin[] = [];\r\n    let totalSelected = 0;\r\n    \r\n    // Greedy selection: pick coins until we have enough\r\n    for (const coin of sortedCoins) {\r\n      selectedCoins.push(coin);\r\n      totalSelected += parseInt(coin.amount);\r\n      \r\n      if (totalSelected >= totalNeededMojos) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    // Check if we have enough\r\n    if (totalSelected < totalNeededMojos) {\r\n      return null;\r\n    }\r\n    \r\n    return selectedCoins;\r\n  }, [unspentCoins]);\r\n  \r\n  // Send XCH transaction\r\n  const sendXCH = useCallback(async (recipientAddress: string, amountXCH: number, feeXCH: number = 0.00001): Promise<boolean> => {\r\n    if (!client) {\r\n      setSendError('Wallet client not available');\r\n      return false;\r\n    }\r\n    \r\n    setIsSending(true);\r\n    setSendError(null);\r\n    \r\n    try {\r\n      // Validate recipient address\r\n      const addressValidation = validateChiaAddress(recipientAddress);\r\n      if (!addressValidation.isValid) {\r\n        throw new Error(addressValidation.error || 'Invalid Chia address format');\r\n      }\r\n      \r\n      // Validate amounts\r\n      if (amountXCH <= 0) {\r\n        throw new Error('Amount must be greater than zero');\r\n      }\r\n      \r\n      if (feeXCH < 0) {\r\n        throw new Error('Fee cannot be negative');\r\n      }\r\n      \r\n      // Convert amounts to mojos\r\n      const amountResult = ChiaCloudWalletClient.xchToMojos(amountXCH);\r\n      const feeResult = ChiaCloudWalletClient.xchToMojos(feeXCH);\r\n      \r\n      if (!amountResult.success) {\r\n        throw new Error(`Invalid amount: ${amountResult.error}`);\r\n      }\r\n      \r\n      if (!feeResult.success) {\r\n        throw new Error(`Invalid fee: ${feeResult.error}`);\r\n      }\r\n      \r\n      const totalNeededMojos = parseInt(amountResult.data) + parseInt(feeResult.data);\r\n      \r\n      // Select coins\r\n      const selectedCoins = selectCoinsForAmount(totalNeededMojos);\r\n      if (!selectedCoins) {\r\n        const availableBalance = unspentCoins.reduce((sum, coin) => sum + parseInt(coin.amount), 0);\r\n        const availableXCH = ChiaCloudWalletClient.mojosToXCHUnsafe(availableBalance);\r\n        const neededXCH = ChiaCloudWalletClient.mojosToXCHUnsafe(totalNeededMojos);\r\n        throw new Error(`Insufficient balance. Need ${neededXCH.toFixed(6)} XCH, have ${availableXCH.toFixed(6)} XCH`);\r\n      }\r\n      \r\n      // Create transaction request\r\n      const request: SendXCHRequest = {\r\n        payments: [{\r\n          address: recipientAddress,\r\n          amount: amountResult.data,\r\n        }],\r\n        selected_coins: selectedCoins,\r\n        fee: feeResult.data,\r\n      };\r\n      \r\n      // Send and broadcast transaction\r\n      const result = await client.sendAndBroadcastXCH(request);\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error);\r\n      }\r\n      \r\n      // Create transaction record\r\n      const transactionRecord: TransactionRecord = {\r\n        id: `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        type: 'outgoing',\r\n        amount: parseInt(amountResult.data),\r\n        recipient: recipientAddress,\r\n        fee: parseInt(feeResult.data),\r\n        timestamp: Date.now(),\r\n        status: 'pending',\r\n        transactionId: result.data.transaction_id,\r\n        blockchainStatus: result.data.status,\r\n      };\r\n      \r\n      // Add transaction to list\r\n      const updatedTransactions = [...transactions, transactionRecord];\r\n      setTransactions(updatedTransactions);\r\n      saveTransactions(updatedTransactions);\r\n      \r\n      // Start confirmation checking (simplified - in a real app you'd want more sophisticated checking)\r\n      setTimeout(() => {\r\n        setTransactions(prevTransactions => \r\n          prevTransactions.map(tx => \r\n            tx.id === transactionRecord.id ? { ...tx, status: 'confirmed' } : tx\r\n          )\r\n        );\r\n      }, 30000); // Mark as confirmed after 30 seconds (placeholder)\r\n      \r\n      return true;\r\n      \r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to send transaction';\r\n      setSendError(errorMessage);\r\n      return false;\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  }, [client, unspentCoins, transactions, validateChiaAddress, selectCoinsForAmount, saveTransactions]);\r\n  \r\n  // Add a transaction record (for external transactions)\r\n  const addTransaction = useCallback((transaction: TransactionRecord) => {\r\n    const updatedTransactions = [...transactions, transaction];\r\n    setTransactions(updatedTransactions);\r\n    saveTransactions(updatedTransactions);\r\n  }, [transactions, saveTransactions]);\r\n  \r\n  // Clear all transactions\r\n  const clearTransactions = useCallback(() => {\r\n    setTransactions([]);\r\n    try {\r\n      localStorage.removeItem(TRANSACTIONS_STORAGE_KEY);\r\n    } catch (error) {\r\n      console.error('Failed to clear transactions from localStorage:', error);\r\n    }\r\n  }, []);\r\n  \r\n  // Load transactions on mount\r\n  React.useEffect(() => {\r\n    loadTransactions();\r\n  }, [loadTransactions]);\r\n  \r\n  return {\r\n    transactions,\r\n    isSending,\r\n    sendError,\r\n    sendXCH,\r\n    addTransaction,\r\n    clearTransactions,\r\n    validateChiaAddress,\r\n  };\r\n} ","import React from 'react';\r\nimport { UseChiaWalletResult } from '../hooks/useChiaWallet.ts';\r\n\r\nexport interface ChiaWalletModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  wallet: UseChiaWalletResult;\r\n}\r\n\r\nexport const ChiaWalletModal: React.FC<ChiaWalletModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  wallet,\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div \r\n        className=\"modal-overlay\" \r\n        onClick={handleOverlayClick}\r\n        onKeyDown={handleKeyDown}\r\n        role=\"dialog\" \r\n        aria-modal=\"true\" \r\n        tabIndex={0}\r\n      >\r\n        <div className=\"modal-content\" role=\"document\" tabIndex={0}>\r\n          <div className=\"modal-header\">\r\n            <div className=\"wallet-info\">\r\n              <div className=\"wallet-icon\">\r\n                <div className=\"chia-logo\">🌱</div>\r\n              </div>\r\n              <div className=\"wallet-details\">\r\n                <h3>\r\n                  {wallet.publicKey ? wallet.formatAddress(wallet.publicKey) : 'Chia Wallet'}\r\n                </h3>\r\n                <p className=\"connection-status\">\r\n                  {wallet.isConnecting ? 'Connecting...' : \r\n                   wallet.isConnected ? 'Connected' : 'Not connected'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button className=\"close-btn\" onClick={onClose} aria-label=\"Close modal\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n            {wallet.isConnecting ? (\r\n              <div className=\"loading-state\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Connecting to wallet...</p>\r\n              </div>\r\n            ) : wallet.error ? (\r\n              <div className=\"error-state\">\r\n                <p className=\"error-message\">{wallet.error}</p>\r\n                <button className=\"retry-btn\" onClick={wallet.connectWallet}>\r\n                  Retry\r\n                </button>\r\n              </div>\r\n            ) : wallet.isConnected ? (\r\n              <div className=\"wallet-info-section\">\r\n                {/* Balance Section */}\r\n                <div className=\"balance-section\">\r\n                  <div className=\"balance-item\">\r\n                    <div className=\"balance-icon\">🌱</div>\r\n                    <div className=\"balance-details\">\r\n                      <h4>Chia (XCH)</h4>\r\n                      {wallet.balanceLoading ? (\r\n                        <div className=\"balance-loading\">\r\n                          <div className=\"balance-spinner\"></div>\r\n                          <p className=\"balance-amount syncing\">Syncing...</p>\r\n                        </div>\r\n                      ) : wallet.balanceError ? (\r\n                        <div className=\"balance-error\">\r\n                          <p className=\"balance-amount error\">Failed to load</p>\r\n                          <button className=\"balance-retry\" onClick={wallet.refreshWallet}>\r\n                            Retry\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <>\r\n                          <p className=\"balance-amount\">\r\n                            {wallet.formatBalance(wallet.balance)} XCH\r\n                          </p>\r\n                          <p className=\"balance-subtitle\">{wallet.coinCount} coins</p>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"action-buttons\">\r\n                  <button className=\"action-btn primary\">\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                      <line x1=\"7\" y1=\"17\" x2=\"17\" y2=\"7\"></line>\r\n                      <polyline points=\"7,7 17,7 17,17\"></polyline>\r\n                    </svg>\r\n                    Send\r\n                  </button>\r\n                  <button className=\"action-btn secondary\">\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                      <line x1=\"17\" y1=\"7\" x2=\"7\" y2=\"17\"></line>\r\n                      <polyline points=\"17,17 7,17 7,7\"></polyline>\r\n                    </svg>\r\n                    Receive\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Disconnect Button */}\r\n                <button className=\"disconnect-btn\" onClick={wallet.disconnectWallet}>\r\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\r\n                    <polyline points=\"16,17 21,12 16,7\"></polyline>\r\n                    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\r\n                  </svg>\r\n                  <span>Disconnect Wallet</span>\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"connect-state\">\r\n                <p>Connect your Chia wallet to get started</p>\r\n                <button className=\"connect-btn\" onClick={wallet.connectWallet}>\r\n                  Connect Wallet\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: rgba(0, 0, 0, 0.7);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 1000;\r\n          backdrop-filter: blur(4px);\r\n        }\r\n\r\n        .modal-content {\r\n          background: #1a1a1a;\r\n          border-radius: 16px;\r\n          width: 90%;\r\n          max-width: 400px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          border: 1px solid #333;\r\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\r\n          color: white;\r\n        }\r\n\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 20px;\r\n          border-bottom: 1px solid #333;\r\n        }\r\n\r\n        .wallet-info {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .wallet-icon {\r\n          width: 48px;\r\n          height: 48px;\r\n          border-radius: 50%;\r\n          background: linear-gradient(45deg, #6bc36b, #4a9f4a);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .chia-logo {\r\n          font-size: 24px;\r\n        }\r\n\r\n        .wallet-details h3 {\r\n          margin: 0;\r\n          color: white;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .connection-status {\r\n          margin: 0;\r\n          color: #888;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .close-btn {\r\n          background: none;\r\n          border: none;\r\n          color: #888;\r\n          cursor: pointer;\r\n          padding: 4px;\r\n          border-radius: 4px;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .close-btn:hover {\r\n          color: white;\r\n          background: #333;\r\n        }\r\n\r\n        .modal-body {\r\n          padding: 20px;\r\n        }\r\n\r\n        .loading-state, .error-state, .connect-state {\r\n          text-align: center;\r\n          padding: 40px 20px;\r\n        }\r\n\r\n        .spinner {\r\n          width: 32px;\r\n          height: 32px;\r\n          border: 3px solid #333;\r\n          border-top: 3px solid #6bc36b;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n          margin: 0 auto 16px;\r\n        }\r\n\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        .error-message {\r\n          color: #ef4444;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .retry-btn, .connect-btn {\r\n          background: #6bc36b;\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          cursor: pointer;\r\n          font-weight: 600;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .retry-btn:hover, .connect-btn:hover {\r\n          background: #4a9f4a;\r\n          transform: translateY(-1px);\r\n        }\r\n\r\n        .balance-section {\r\n          margin-bottom: 24px;\r\n        }\r\n\r\n        .balance-item {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          padding: 16px;\r\n          background: #262626;\r\n          border-radius: 12px;\r\n          border: 1px solid #333;\r\n        }\r\n\r\n        .balance-icon {\r\n          font-size: 24px;\r\n          width: 40px;\r\n          height: 40px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          background: #333;\r\n          border-radius: 50%;\r\n        }\r\n\r\n        .balance-details h4 {\r\n          margin: 0;\r\n          color: white;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .balance-amount {\r\n          margin: 4px 0;\r\n          color: #22c55e;\r\n          font-size: 18px;\r\n          font-weight: 700;\r\n        }\r\n\r\n        .balance-amount.syncing {\r\n          color: #fb923c;\r\n        }\r\n\r\n        .balance-amount.error {\r\n          color: #ef4444;\r\n        }\r\n\r\n        .balance-subtitle {\r\n          margin: 0;\r\n          color: #888;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .balance-loading {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        .balance-spinner {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid #333;\r\n          border-top: 2px solid #fb923c;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n        }\r\n\r\n        .balance-error {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        .balance-retry {\r\n          background: #ef4444;\r\n          color: white;\r\n          border: none;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 12px;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .balance-retry:hover {\r\n          background: #dc2626;\r\n        }\r\n\r\n        .action-buttons {\r\n          display: flex;\r\n          gap: 12px;\r\n          margin-bottom: 24px;\r\n        }\r\n\r\n        .action-btn {\r\n          flex: 1;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          gap: 8px;\r\n          padding: 12px 16px;\r\n          border-radius: 12px;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-weight: 600;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .action-btn.primary {\r\n          background: #6bc36b;\r\n          color: white;\r\n        }\r\n\r\n        .action-btn.primary:hover {\r\n          background: #4a9f4a;\r\n          transform: translateY(-1px);\r\n        }\r\n\r\n        .action-btn.secondary {\r\n          background: #333;\r\n          color: white;\r\n        }\r\n\r\n        .action-btn.secondary:hover {\r\n          background: #404040;\r\n          transform: translateY(-1px);\r\n        }\r\n\r\n        .disconnect-btn {\r\n          width: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          gap: 8px;\r\n          padding: 16px;\r\n          background: none;\r\n          border: 1px solid #333;\r\n          color: #888;\r\n          cursor: pointer;\r\n          border-radius: 8px;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .disconnect-btn:hover {\r\n          background: #333;\r\n          color: white;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport { useChiaWallet } from '../hooks/useChiaWallet.ts';\r\nimport { ChiaWalletModal } from './ChiaWalletModal.tsx';\r\n\r\nexport interface ChiaWalletButtonProps {\r\n  jwtToken?: string | null;\r\n  variant?: 'primary' | 'secondary';\r\n  size?: 'small' | 'medium' | 'large';\r\n  disabled?: boolean;\r\n  baseUrl?: string;\r\n  enableLogging?: boolean;\r\n  autoConnect?: boolean;\r\n  onWalletUpdate?: (walletState: any) => void;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const ChiaWalletButton: React.FC<ChiaWalletButtonProps> = ({\r\n  jwtToken = null,\r\n  variant = 'primary',\r\n  size = 'medium',\r\n  disabled = false,\r\n  baseUrl,\r\n  enableLogging,\r\n  autoConnect = true,\r\n  onWalletUpdate,\r\n  className = '',\r\n  style,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  const wallet = useChiaWallet({\r\n    baseUrl,\r\n    enableLogging,\r\n    autoConnect,\r\n  });\r\n  \r\n  // Set JWT token when it changes\r\n  React.useEffect(() => {\r\n    if (jwtToken !== wallet.jwtToken) {\r\n      wallet.setJwtToken(jwtToken);\r\n    }\r\n  }, [jwtToken, wallet]);\r\n  \r\n  // Call onWalletUpdate when wallet state changes\r\n  React.useEffect(() => {\r\n    if (onWalletUpdate) {\r\n      onWalletUpdate({\r\n        isConnected: wallet.isConnected,\r\n        publicKey: wallet.publicKey,\r\n        publicKeyData: wallet.publicKeyData,\r\n        balance: wallet.balance,\r\n        coinCount: wallet.coinCount,\r\n        error: wallet.error,\r\n      });\r\n    }\r\n  }, [\r\n    wallet.isConnected,\r\n    wallet.publicKey,\r\n    wallet.publicKeyData,\r\n    wallet.balance,\r\n    wallet.coinCount,\r\n    wallet.error,\r\n    onWalletUpdate,\r\n  ]);\r\n  \r\n  const openModal = () => {\r\n    if (!disabled) {\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n  \r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n  const formatAddress = (address: string): string => {\r\n    if (!address) return '';\r\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\r\n  };\r\n  \r\n  const formatBalance = (balance: number): string => {\r\n    return wallet.formatBalance(balance);\r\n  };\r\n  \r\n  const getButtonClasses = (): string => {\r\n    const baseClasses = 'chia-wallet-btn';\r\n    const variantClass = variant;\r\n    const sizeClass = size;\r\n    const stateClasses = [\r\n      wallet.isConnected ? 'connected' : '',\r\n      wallet.isConnecting ? 'connecting' : '',\r\n      disabled ? 'disabled' : '',\r\n    ].filter(Boolean).join(' ');\r\n    \r\n    return [baseClasses, variantClass, sizeClass, stateClasses, className]\r\n      .filter(Boolean)\r\n      .join(' ');\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <button\r\n        className={getButtonClasses()}\r\n        onClick={openModal}\r\n        disabled={disabled}\r\n        aria-label=\"Open Chia wallet\"\r\n        style={style}\r\n      >\r\n        <div className=\"btn-content\">\r\n          <div className=\"chia-icon\">🌱</div>\r\n          <div className=\"btn-text-content\">\r\n            {wallet.isConnecting ? (\r\n              <span className=\"btn-text\">Connecting...</span>\r\n            ) : wallet.isConnected && wallet.publicKey ? (\r\n              <>\r\n                <span className=\"btn-text connected-text\">\r\n                  {formatAddress(wallet.publicKey)}\r\n                </span>\r\n                {wallet.balance > 0 ? (\r\n                  <span className=\"btn-balance\">\r\n                    {formatBalance(wallet.balance)} XCH\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"btn-balance\">Click to view balance</span>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <span className=\"btn-text\">\r\n                {jwtToken ? 'Chia Wallet' : 'Connect Chia'}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n\r\n      <ChiaWalletModal\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        wallet={wallet}\r\n      />\r\n      \r\n      <style>{`\r\n        .chia-wallet-btn {\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          border: none;\r\n          border-radius: 12px;\r\n          cursor: pointer;\r\n          font-weight: 600;\r\n          transition: all 0.2s ease;\r\n          position: relative;\r\n          overflow: hidden;\r\n          font-family: inherit;\r\n          min-width: 120px;\r\n        }\r\n\r\n        .chia-wallet-btn::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: linear-gradient(45deg, #6bc36b, #4a9f4a);\r\n          opacity: 0;\r\n          transition: opacity 0.2s ease;\r\n        }\r\n\r\n        .chia-wallet-btn:hover::before {\r\n          opacity: 0.1;\r\n        }\r\n\r\n        .chia-wallet-btn.primary {\r\n          background: linear-gradient(45deg, #6bc36b, #4a9f4a);\r\n          color: white;\r\n        }\r\n\r\n        .chia-wallet-btn.primary:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 8px 25px rgba(107, 195, 107, 0.3);\r\n        }\r\n\r\n        .chia-wallet-btn.secondary {\r\n          background: transparent;\r\n          color: #6bc36b;\r\n          border: 2px solid #6bc36b;\r\n        }\r\n\r\n        .chia-wallet-btn.secondary:hover {\r\n          background: #6bc36b;\r\n          color: white;\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 8px 25px rgba(107, 195, 107, 0.3);\r\n        }\r\n\r\n        /* Connected state styling */\r\n        .chia-wallet-btn.connected {\r\n          background: linear-gradient(45deg, #22c55e, #16a34a) !important;\r\n          color: white !important;\r\n          border-color: #22c55e !important;\r\n        }\r\n\r\n        .chia-wallet-btn.connected:hover {\r\n          background: linear-gradient(45deg, #16a34a, #15803d) !important;\r\n          box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3) !important;\r\n        }\r\n\r\n        /* Connecting state styling */\r\n        .chia-wallet-btn.connecting {\r\n          background: linear-gradient(45deg, #f59e0b, #d97706) !important;\r\n          color: white !important;\r\n          cursor: not-allowed !important;\r\n        }\r\n\r\n        .chia-wallet-btn.small {\r\n          padding: 8px 16px;\r\n          font-size: 14px;\r\n          border-radius: 8px;\r\n          min-width: 100px;\r\n        }\r\n\r\n        .chia-wallet-btn.medium {\r\n          padding: 12px 24px;\r\n          font-size: 16px;\r\n          min-width: 140px;\r\n        }\r\n\r\n        .chia-wallet-btn.large {\r\n          padding: 16px 32px;\r\n          font-size: 18px;\r\n          border-radius: 16px;\r\n          min-width: 160px;\r\n        }\r\n\r\n        .chia-wallet-btn.disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n          transform: none !important;\r\n          box-shadow: none !important;\r\n        }\r\n\r\n        .btn-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          position: relative;\r\n          z-index: 1;\r\n        }\r\n\r\n        .btn-text-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n          gap: 2px;\r\n        }\r\n\r\n        .chia-icon {\r\n          font-size: 1.2em;\r\n          flex-shrink: 0;\r\n        }\r\n\r\n        .btn-text {\r\n          white-space: nowrap;\r\n          line-height: 1;\r\n        }\r\n\r\n        .connected-text {\r\n          font-weight: 600;\r\n          font-family: monospace;\r\n        }\r\n\r\n        .btn-balance {\r\n          font-size: 0.8em;\r\n          opacity: 0.9;\r\n          font-weight: 500;\r\n          line-height: 1;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        /* Responsive adjustments */\r\n        @media (max-width: 640px) {\r\n          .chia-wallet-btn.medium {\r\n            padding: 10px 20px;\r\n            font-size: 14px;\r\n            min-width: 120px;\r\n          }\r\n          \r\n          .chia-wallet-btn.large {\r\n            padding: 14px 28px;\r\n            font-size: 16px;\r\n            min-width: 140px;\r\n          }\r\n\r\n          .btn-content {\r\n            gap: 6px;\r\n          }\r\n\r\n          .btn-balance {\r\n            font-size: 0.75em;\r\n          }\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}; "],"names":["_jsxs","_jsx","_Fragment"],"mappings":"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","x_google_ignoreList":[0]}